generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id      String  @id
    bio     String  @default("I like cats with boots")
    special Boolean @default(false)

    rankLevel      Int     @default(1) @map("rank_level")
    rankXp         BigInt  @default(0) @map("rank_xp")
    rankNeededXp   BigInt  @default(500) @map("rank_needed_xp")
    rankColor      String  @default("0EA5E9") @map("rank_color")
    rankBackground String? @map("rank_background")

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    @@map("users")
}

model Member {
    id      String @id
    guildId String @map("guild_id")

    guild Guild @relation(fields: [guildId], references: [id])
    tags  Tag[]

    @@map("members")
}

model Guild {
    id        String    @unique
    language  String    @default("en-US")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    members Member[]
    tags    Tag[]

    @@map("guilds")
}

model Tag {
    id        Int       @id @default(autoincrement())
    name      String
    content   String
    uses      Int       @default(0)
    guildId   String    @map("guild_id")
    memberId  String    @map("member_id")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    guild  Guild  @relation(fields: [guildId], references: [id])
    author Member @relation(fields: [memberId], references: [id])

    @@unique([name, guildId])
    @@map("tags")
}
